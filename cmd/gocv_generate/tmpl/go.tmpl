// Code generated by "gocv_generate -o {{.GoFilename}} "; DO NOT EDIT.
// Install by "go get -u -v github.com/gocv_resource_tracker/cmd/gocv_generate";
//go:generate gocv_generate -o {{.GoFilename}}

package gocv_resource_tracker

import (
    origin "gocv.io/x/gocv"
    "image"
    "image/color"
)

{{if .SameTypes}}
{{range .SameTypes}}
{{.Doc}}
type {{.Name}} = origin.{{.Name}} {{.Comment}}
{{end}}
{{end}}

{{if .WithCloseTypes}}
{{range .WithCloseTypes}}
{{.Doc}}
type {{.Name}} struct {
{{if eq .Kind "Interface"}}
    origin.{{.Name}}
{{else}}
    *origin.{{.Name}}
{{end}}
    ResourceTracker *GoCVResourceTracker
}
{{if eq .Kind "Interface"}}
func (p *{{.Name}}) coreElem() origin.{{.Name}} {
    return p.{{.Name}}
}

func new{{.Name}}FromElem(rt *GoCVResourceTracker, core origin.{{.Name}}) *{{.Name}} {
    {{if .IsCloserError}}
    rt.TrackCloseError(core)
    {{else}}
    rt.TrackCloser(core)
    {{end}}
    return &{{.Name}}{
        core,
        rt,
    }
}
{{else}}
func (p *{{.Name}}) coreElem() origin.{{.Name}} {
    return *p.{{.Name}}
}

func (p *{{.Name}}) coreElemPtr() *origin.{{.Name}} {
    return p.{{.Name}}
}


func new{{.Name}}FromPtr(rt *GoCVResourceTracker, core *origin.{{.Name}}) *{{.Name}} {
    {{if .IsCloserError}}
    rt.TrackCloseError(core)
    {{else if .IsCloser}}
    rt.TrackCloser(core)
    {{end}}
    return &{{.Name}}{
        core,
        rt,
    }
}

func new{{.Name}}FromElem(rt *GoCVResourceTracker, core origin.{{.Name}}) *{{.Name}} {
    {{if .IsCloserError}}
    rt.TrackCloseError(&core)
    {{else if .IsCloser}}
    rt.TrackCloser(&core)
    {{end}}
    return &{{.Name}}{
        &core,
        rt,
    }
}

func new{{.Name}}FromElemNoTracker(rt *GoCVResourceTracker, core origin.{{.Name}}) *{{.Name}} {
    return &{{.Name}}{
        &core,
        rt,
    }
}

{{end}} // Is Interface

// 所有返回值有Close的函数

{{range .MethodsReturnsCloser}}
{{.Doc}}
func (ptr *{{.ReceverTypeName}}) {{GoFuncFormat . $ true}}
{{end}}

{{end}}  // range .WithCloseTypes
{{end}}  // if .WithCloseTypes

{{if .ToPtrTypes}}
{{range .ToPtrTypes}}
{{.Doc}}
type {{.Name}} = origin.{{.Name}}
{{end}}
{{end}}


{{if .Values}}
const (
{{range .Values}} {{if not .IsVar}}
{{.Doc}}
{{.Name}} = origin.{{.Name}} {{.Comment}} // {{.TypeName}}
{{end}}{{end}}
)
{{end}}

{{if .Values}}
var (
{{range .Values}} {{if .IsVar}}
{{.Doc}}
{{.Name}} = origin.{{.Name}} {{.Comment}} // {{.TypeName}}
{{end}}{{end}}
)
{{end}}

{{if .Methods}}
{{range .Methods}}
{{.Doc}}
func (rt *GoCVResourceTracker) {{GoFuncFormat . $ false}}
{{end}}
{{end}}


